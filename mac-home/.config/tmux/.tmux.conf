# cat << EOF > /dev/null

# -- general
set-option -q -g default-path "$PWD"

setw -g xterm-keys on
set -s escape-time 0
set -sg repeat-time 300
set -s focus-events on
set -g mouse on
set -sg exit-empty on

set -q -g status-utf8 on
setw -q -g utf8 on

set -g visual-activity off
setw -g monitor-activity off
setw -g monitor-bell off

set -g history-limit 10000

set-hook -g pane-focus-in "run -b 'bash ~/.config/tmux/fzf_panes.tmux update_mru_pane_ids'"
bind -n C-w run -b 'bash ~/.config/tmux/fzf_panes.tmux new_window'

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

set -ga update-environment '\
DISPLAY DBUS_SESSION_BUS_ADDRESS \
QT_IM_MODULE QT_QPA_PLATFORMTHEME \
SESSION_MANAGER \
XDG_CONFIG_HOME XDG_CACHE_HOME XDG_DATA_HOME\
XDG_MENU_PREFIX XDG_RUNTIME_DIR XDG_SESSION_CLASS \
XDG_SESSION_DESKTOP XDG_SESSION_TYPE XDG_CURRENT_DESKTOP \
XMODIFIERS \
FZF_DEFAULT_OPTS \
'
set-hook -g client-attached 'run -b "cut -c3- ~/.tmux.conf | sh -s update_env_event"'

# -- prefix
unbind C-b
set -g prefix C-b
bind C-b send-prefix

# -- display
set -g base-index 1
setw -g pane-base-index 1

setw -g automatic-rename on
set -g renumber-windows on

set -g set-titles on

set -g display-panes-time 2000
set -g display-time 2000

set -g status-interval 1

# -- navigation

# create session
bind C-c new-session

# window management
bind -n C-o new-window -c "#{pane_current_path}"
bind -n C-O break-pane
bind -n C-Q kill-pane

# window navigation
unbind n
unbind p
# Keep default prefix+number bindings for window selection
bind -r C-p previous-window
bind -r C-n next-window

# Use prefix + number for window selection (standard tmux way)
# bind 1 select-window -t 1  # These are already unbound above
# bind 2 select-window -t 2  # Will use default tmux behavior


# Use prefix + shift+number for join-pane (more standard)
bind ! join-pane -t :1
bind @ join-pane -t :2
bind '#' join-pane -t :3
bind '$' join-pane -t :4
bind % join-pane -t :5
bind ^ join-pane -t :6
bind & join-pane -t :7
bind * join-pane -t :8
bind '(' join-pane -t :9

bind k split-window -vb -c "#{pane_current_path}"
bind j split-window -v -c "#{pane_current_path}"
bind h split-window -hb -c "#{pane_current_path}"
bind l split-window -h -c "#{pane_current_path}"

bind -n C-f resize-pane -Z

# pane navigation - use prefix + q + number for pane selection (standard tmux way)
# The default prefix+number should select windows, not panes
# Use 'prefix + q' to show pane numbers, then press number to select
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R
bind > swap-pane -D
bind < swap-pane -U
bind | swap-pane
bind -n C-Space next-layout

bind W choose-tree -Z
bind S choose-tree 'move-pane -v -s "%%"'
bind V choose-tree 'move-pane -h -s "%%"'

# pane resizing
bind -n C-H resize-pane -L 3
bind -n C-J resize-pane -D 3
bind -n C-K resize-pane -U 3
bind -n C-L resize-pane -R 3

set -g status-keys emacs
set -g mode-keys vi

bind -n C-v copy-mode

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi h send-keys -X cursor-left
bind -T copy-mode-vi l send-keys -X cursor-right
bind -T copy-mode-vi k send-keys -X cursor-up
bind -T copy-mode-vi j send-keys -X cursor-down
bind -T copy-mode-vi e send-keys -X next-word-end
bind -T copy-mode-vi K send-keys -N 5 -X cursor-up
bind -T copy-mode-vi J send-keys -N 5 -X cursor-down
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line
bind -T copy-mode-vi Y send-keys -X copy-end-of-line
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi = send-keys -X search-again
bind -T copy-mode-vi = send-keys -X search-reverse


bind b list-buffers
bind p paste-buffer

# -- toggle_syn_input
bind C-g if-shell '[[ $(tmux showw synchronize-panes | cut -d\  -f2) == "on" ]]' \
'setw synchronize-panes off; set -g pane-border-style fg=magenta' \
'setw synchronize-panes on; set -g pane-border-style fg=red'

# -- toggle_status
bind s if-shell '[[ $(tmux show -g status | cut -d\  -f2) == "on" ]]' \
'set -g status off' \
'set -g status on'

# -- theme
#set -g status off

# panes
#setw -g pane-border-status bottom
setw -g pane-border-format '#[bold]#{?#{&&:#{pane_active},#{client_prefix}},#[underscore],}\
#{?pane_active,❐ #S:#I/#{session_windows} ,}#{?window_zoomed_flag,⬢,❄} #P ⇒ #{pane_tty} #{pane_current_command}'
#set -g pane-active-border-style fg=brightblue
#set -g pane-border-style fg=magenta

# windows
set -g status-justify 'centre'
set -g status-left-length 90
set -g status-right-length 140
setw -g window-status-separator ''

# default statusbar colors
set -g status-bg black
#set -g status-left ' #[fg=magenta,bold]❐ #S'
#set -g status-left '#[fg=brightyellow] #{?client_prefix,⌨ ,  }  #[fg=magenta,bold] %Y-%m-%d %H:%M '
#set -g status-right '#(rainbarf --battery --remaining --bolt --tmux --rgb)'
#set -g status-left "#[fg=magenta,bold] %Y-%m-%d %H:%M | #[fg=brightblue]#(curl icanhazip.com) #(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
# Show window index; prefer last recorded non-shell command from tmux variable, else just directory
# Use window_name set by automatic-rename; hide when it's a shell (Tokyo Night colors)
setw -g window-status-format '#[fg=brightblue] #I #W '
setw -g window-status-current-format '#[fg=magenta,bold] #I #W:#F'
setw -g window-status-activity-style bg=black
setw -g window-status-bell-style bg=black
#set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"


# Lightweight built-in status segments (no external scripts)
set-option -g status-left "#(~/.config/tmux/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.config/tmux/tmux-powerline/powerline.sh right)"

# window navigation - ensure digits select windows
unbind 1
unbind 2
unbind 3
unbind 4
unbind 5
unbind 6
unbind 7
unbind 8
unbind 9
unbind 0
bind 1 select-window -t 1
bind 2 select-window -t 2
bind 3 select-window -t 3
bind 4 select-window -t 4
bind 5 select-window -t 5
bind 6 select-window -t 6
bind 7 select-window -t 7
bind 8 select-window -t 8
bind 9 select-window -t 9
bind 0 select-window -t 10


# --- Selenized Light overrides ---
set -g status-bg "#fbfbfb"
set -g status-fg "#586e75"
set -g status-style bg=#fbfbfb,fg=#586e75
set -g pane-active-border-style fg="#268bd2"
set -g pane-border-style fg="#93a1a1"
set -g display-panes-colour "#93a1a1"
set -g display-panes-active-colour "#d33682"
setw -g window-status-format '#[fg=#268bd2] #I #W '
setw -g window-status-current-format '#[fg=#d33682,bold] #I #W:#F'
setw -g window-status-activity-style bg=#fbfbfb,fg=#d33682
setw -g window-status-bell-style bg=#fbfbfb,fg=#d33682
set -g message-style bg=#fbfbfb,fg=#d33682
set -g message-command-style bg=#fbfbfb,fg=#d33682
set -g mode-style bg=#eee8d5,fg=#073642

